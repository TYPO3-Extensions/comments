plugin.tx_comments_pi1 = USER
plugin.tx_comments_pi1 {
	userFunc = tx_comments_pi1->main
	code = COMMENTS
	storagePid = {$plugin.tx_comments_pi1.storagePid}
	externalPrefix = {$plugin.tx_comments_pi1.externalPrefix}
	templateFile = {$plugin.tx_comments_pi1.templateFile}
	additionalClearCachePages =
	templateFile = EXT:comments/res/pi1_template.html

	advanced {
		commentsPerPage = {$plugin.tx_comments_pi1.commentsPerPage}

		# Comments can be automatically closed after X months, days or hours. Specify integer number followed by m, d or h. Empty means "no limit"
		closeCommentsAfter =
	}

	preventDuplicatePosts = 1

	requiredFields = firstname,email,content

	spamProtect {
		requireApproval = {$plugin.tx_comments_pi1.requireApproval}
		useCaptcha = {$plugin.tx_comments_pi1.useCaptcha}
		checkTypicalSpam = {$plugin.tx_comments_pi1.checkTypicalSpam}
		considerReferer = 0
		notificationEmail = {$plugin.tx_comments_pi1.notificationEmail}
		fromEmail = {$plugin.tx_comments_pi1.fromEmail}
		emailTemplate = {$plugin.tx_comments_pi1.emailTemplate}
	}

	# stdWrap!
	requiredFields_errorWrap {
		noTrimWrap = |<span class="tx-comments-required-error">Error: |</span>|
	}

	# maps pi1 to associated tables where pi1 plugin stores records
	prefixToTableMap {
		tx_album3x_pi1 = tx_album3x_images
		tx_commerce_pi1 = tx_commerce_products
		tx_irfaq_pi1 = tx_irfaq_q
		tx_mininews_pi1 = tx_mininews_news
		tx_ttnews = tt_news
	}

	# some extensions may use url parameter other than showUid to show single record. Mapping here shows table to parameter mapping
	showUidMap {
		tx_ttnews = tt_news
	}
}